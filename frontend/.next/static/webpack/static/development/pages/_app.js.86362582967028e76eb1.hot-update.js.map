{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.86362582967028e76eb1.hot-update.js","sources":["webpack:///./components/RemoveFromCart.js"],"sourcesContent":["import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport gql from 'graphql-tag';\r\nimport { CURRENT_USER_QUERY } from './User';\r\n\r\nconst REMOVE_FROM_CART_MUTATION = gql`\r\n\tmutation removeFromCart($id: ID!)\r\n\t{\r\n\t\tremoveFromCart(id: $id)\r\n\t\t{\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst BigButton = styled.button`\r\n\tfont-size: 3rem;\r\n\tbackground: none;\r\n\tborder: 0;\r\n\t&: hover\r\n\t{\r\n\t\tcolor: ${props => props.theme.red};\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nexport default class RemoveFromCart extends React.Component\r\n{\r\n\t// Type checking. PropTypes exports a range of validators that can be used to make sure the data you receive is valid.\r\n\tstatic propTypes = {\r\n\t\tid: PropTypes.string.isRequired,\r\n\t};\r\n\r\n\t// this gets called as soon as we get a response back from the server after a mutation has been performed\r\n\tupdate = (cache, payload) => {\r\n\t\tconsole.log(\"Running remove from cart from frontend\")\r\n\t\t// read the cache\r\n\t\tconst data = cache.readQuery({ query: CURRENT_USER_QUERY });\r\n\t\tconsole.log(data);\r\n\t\t// remove that item from the cart in cache\r\n\t\tconst cartItemId = payload.data.removeFromCart.id;\r\n\t\tdata.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\r\n\t\t// write it back to the cache\r\n\t\tcache.writeQuery({ query: CURRENT_USER_QUERY, data });\r\n\t};\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<Mutation \r\n\t\t\t\tmutation={REMOVE_FROM_CART_MUTATION} \r\n\t\t\t\tvariables={{id: this.props.id}} \r\n\t\t\t\tupdate={this.update}\r\n\t\t\t\toptimisticResponse={{\r\n\t\t\t\t\t__typename: 'Mutation',\r\n\t\t\t\t\tremoveFromCart: {\r\n\t\t\t\t\t\tid: this.props.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{(removeFromCart, {loading, error}) => (\r\n\t\t\t\t\t\t<BigButton\r\n\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\tonClick={() => {removeFromCart().catch(err => alert(err.message))}}\r\n\t\t\t\t\t\t\ttitle=\"Delete Item\">&times;</BigButton>\r\n\t\t\t\t)}\r\n\t\t\t</Mutation>\r\n\t\t\t\t\r\n\t\t);\r\n\t}\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;;;;AA3CA;AACA;AADA;AAIA;AADA;AACA;;;;;A","sourceRoot":""}