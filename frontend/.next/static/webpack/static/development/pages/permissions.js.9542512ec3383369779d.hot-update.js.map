{"version":3,"file":"static/webpack/static\\development\\pages\\permissions.js.9542512ec3383369779d.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo';\r\nimport Error from './ErrorMessage';\r\nimport gql from 'graphql-tag';\r\nimport Table from './styles/Table';\r\nimport SickButton from './styles/SickButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst possiblePermissions = [\r\n  'ADMIN',\r\n  'USER',\r\n  'ITEMCREATE',\r\n  'ITEMUPDATE',\r\n  'ITEMDELETE',\r\n  'PERMISSIONUPDATE',\r\n];\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst Permissions = props => (\r\n  <Query query={ALL_USERS_QUERY}>\r\n    {({ data, loading, error }) => (\r\n      <div>\r\n        <Error error={error} />\r\n        <div>\r\n          <h2>Manage Permissions</h2>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\r\n                <th>Controls</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{data.users.map(user => <UserPermissions user={user} key={user.id} />)}</tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Query>\r\n);\r\n\r\nclass UserPermissions extends React.Component {\r\n  static propTypes = {\r\n  \tuser: PropTypes.shape({\r\n  \t\tname: PropTypes.string,\r\n  \t\temail: PropTypes.string,\r\n  \t\tid: PropTypes.string,\r\n  \t\tpermissions: PropTypes.array,\r\n  \t}).isRequired,\r\n  };\r\n\r\n  states = {\r\n  \tpermissions: this.props.user.permissions,\r\n  };\r\n\r\n  handlePermissionChange = (e) => {\r\n  \tconst checkbox = e.target;\r\n  \t// take a copy of current permissions\r\n  \tlet updatedPermissions = [...this.state.permissions];\r\n  \t//figure out if we need to add or remove permission\r\n  \tif(checkbox.checked)\r\n  \t{\r\n  \t\tupdatedPermissions.push(checkbox.value);\r\n  \t}\r\n  \telse {\r\n  \t\tupdatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\r\n  \t}\r\n  \tthis.setState({ permissions: updatedPermissions });\r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n    return (\r\n      <tr>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        {possiblePermissions.map(permission => (\r\n          <td key={permission}>\r\n            <label htmlFor={`${user.id}-permission-${permission}`}>\r\n              <input \r\n\t              type=\"checkbox\" \r\n\t              checked={this.state.permission.includes(permission)}\r\n\t              value={permission}\r\n\t              onChange={this.handlePermissionChange}\r\n             />\r\n            </label>\r\n          </td>\r\n        ))}\r\n        <td>\r\n          <SickButton>Update</SickButton>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Permissions;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApDA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAqDA;;;;A","sourceRoot":""}